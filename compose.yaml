# Docker Compose for Next.js app with Prisma and Neon Database
# Since you're using Neon (cloud PostgreSQL), no local database needed

services:
  app:
    build:
      context: .
      args:
        - NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY}
        - CLERK_SECRET_KEY=${CLERK_SECRET_KEY}
        - NEXT_PUBLIC_CLERK_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_SIGN_IN_URL}
        - NEXT_PUBLIC_CLERK_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_SIGN_UP_URL}
        - NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL=${NEXT_PUBLIC_CLERK_AFTER_SIGN_IN_URL}
        - NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL=${NEXT_PUBLIC_CLERK_AFTER_SIGN_UP_URL}
        - DATABASE_URL=${DATABASE_URL}
        - GEMINI_API_KEY=${GEMINI_API_KEY}
    container_name: nextjs-prisma-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3000
      HOSTNAME: "0.0.0.0"
    env_file:
      - .env # Should contain DATABASE_URL for Neon and other secrets
    ports:
      - "3000:3000"
# No local database needed since you're using Neon!
# Just make sure your .env file contains:
# DATABASE_URL="postgresql://username:password@ep-xxxxx.neon.tech/dbname?sslmode=require"
